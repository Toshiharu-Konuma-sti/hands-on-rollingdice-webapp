plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco'
	id 'checkstyle'
	id 'pmd'
}

group = 'jp.sios'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {

	// fundamental libraries necessary to run the environment of Spring Boot
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// libraries for Metrics in OpenTelemetry (using both OpenTelemetry and Prometheus protocol)
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	runtimeOnly 'io.micrometer:micrometer-registry-otlp'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

	// library for Metrics to enable an exemplar
	implementation 'io.micrometer:micrometer-tracing-bridge-otel'

	// library for Logging and Tracing in OpenTelemetry
	implementation 'io.opentelemetry.instrumentation:opentelemetry-spring-boot-starter:2.12.0'

//	// library for pyroscope
//	implementation 'io.pyroscope:agent:0.18.0'

	// libraties necessary to connect to a database
	implementation 'com.mysql:mysql-connector-j:9.2.0'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'

}

jacoco {
	toolVersion = "0.8.13"
}

checkstyle {
	toolVersion = "10.26.1"
	configFile = file("${rootProject.projectDir}/config/checkstyle/google_checks.xml")
	configProperties = [
		'org.checkstyle.google.suppressionfilter.config': "${rootProject.projectDir}/config/checkstyle/checkstyle-suppressions.xml"
	]
}

pmd {
	toolVersion = "7.12.0"
	ruleSetFiles = files("${rootProject.projectDir}/config/pmd/pmd-ruleset.xml")
	ignoreFailures = true
	sourceSets = [sourceSets.main, sourceSets.test]
}

tasks.withType(Pmd) {
	reports {
		xml.required = true
		html.required = true
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

jacocoTestReport {
	reports {
		xml.required = true
		html.required = true
	}
}

test.finalizedBy jacocoTestReport
test.finalizedBy checkstyleMain
test.finalizedBy checkstyleTest
test.finalizedBy pmdMain
test.finalizedBy pmdTest
